/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica.pkg3;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author angel
 */
public class Partida extends javax.swing.JFrame {
    JLabel lnave;
    
    Cronometro tiempo;
    
    Misil disparo;
    
    Movimiento mov;
    
    Potenciadores poten;
    
    int vel;
    
    int velpotenciada=1;
    
    boolean navepotenciada=false;
    
    boolean pausa=false;
    
    boolean congelada=false;
    
    int punteo=0;
    
    JLabel[][] enemigo1=new JLabel[1][8];
    int enemigos1=8;
    JLabel[][] enemigo2=new JLabel[2][8];
    int enemigos2=16;
    JLabel[][] enemigo3=new JLabel[2][8];
    int enemigos3=16;
    
    Enemigo[][] n1=new Enemigo[1][8];
    Enemigo[][] n2=new Enemigo[2][8];
    Enemigo[][] n3=new Enemigo[2][8];
    

    /**
     * Creates new form Partida
     */
    public Partida() {
        initComponents();
        modificaciones();
        enemigos();
        tiempo=new Cronometro(this);
        tiempo.start();
        mov=new Movimiento(this);
        mov.start();
        vel=Practica3.configuracion.getVelocidad1();
        poten=new Potenciadores(this);
        poten.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 81));

        l2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        l2.setForeground(new java.awt.Color(255, 255, 255));
        l2.setText("Tiempo");

        l3.setText("reloj");
        l3.setToolTipText("");

        l1.setBackground(new java.awt.Color(255, 255, 255));
        l1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        l1.setForeground(new java.awt.Color(255, 255, 255));
        l1.setText("1200");

        l4.setBackground(new java.awt.Color(255, 255, 255));
        l4.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        l4.setForeground(new java.awt.Color(255, 255, 255));
        l4.setText("0");

        l5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        l5.setForeground(new java.awt.Color(255, 255, 255));
        l5.setText("Puntos");

        l6.setText("moneda");
        l6.setToolTipText("");

        l7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        l7.setForeground(new java.awt.Color(255, 255, 255));
        l7.setText("Velocidad");

        l8.setBackground(new java.awt.Color(255, 255, 255));
        l8.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        l8.setForeground(new java.awt.Color(255, 255, 255));
        l8.setText("0");

        l9.setText("reproduccion");
        l9.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l5)
                    .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(154, 154, 154)
                .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l7)
                    .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 389, Short.MAX_VALUE)
                .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l2)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(l2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l5)
                            .addComponent(l7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(213, 213, 213))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setMaximumSize(new java.awt.Dimension(1200, 713));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 713));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 713, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        int tecla=evt.getKeyCode();
        
        switch(tecla){
            case KeyEvent.VK_UP:
                if(navepotenciada){
                    velpotenciada=3;
                }
                //System.out.println("tecla arriba");
                if(lnave.getLocation().y>0&&pausa==false&&congelada==false){
                    lnave.setLocation(lnave.getX(), lnave.getY()-(10*vel*velpotenciada));
                }
                break;
                
            case KeyEvent.VK_DOWN:
                if(navepotenciada){
                    velpotenciada=3;
                }
                //System.out.println("tecla abajo");
                if(((lnave.getLocation().y+120)<=713)&&pausa==false&&congelada==false){
                 lnave.setLocation(lnave.getX(), lnave.getY()+(10*vel*velpotenciada));   
                }
                break;
                
            case KeyEvent.VK_SPACE:
                if (!pausa&&!congelada) {
                    disparo = new Misil(lnave.getBounds(), this);
                    disparo.start();
                }
                break;

            case KeyEvent.VK_ESCAPE:
                pausa();
                //findeljuego();
                break;
        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Partida().setVisible(true);
            }
        });
    }
    



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    public javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    public javax.swing.JLabel l8;
    private javax.swing.JLabel l9;
    // End of variables declaration//GEN-END:variables
    public void modificaciones(){
        l1.setForeground(Color.yellow);
        ImageIcon imagen=new ImageIcon("src/imagenes/Temporizador.png");
        Icon icono=new ImageIcon(imagen.getImage().getScaledInstance(l3.getWidth(),l3.getHeight(),Image.SCALE_DEFAULT));
        l3.setIcon(icono);
        
        ImageIcon moneda=new ImageIcon("src/imagenes/moneda.gif");
        Icon iconomoneda=new ImageIcon(moneda.getImage().getScaledInstance(l6.getWidth(), l6.getHeight(), Image.SCALE_DEFAULT));
        l6.setIcon(iconomoneda);
        
        ImageIcon reproduccion=new ImageIcon("src/imagenes/reproduccion.png");
        Icon iconoreproduccion=new ImageIcon(reproduccion.getImage().getScaledInstance(l9.getWidth(), l9.getHeight(), Image.SCALE_DEFAULT));
        l9.setIcon(iconoreproduccion);
        
        lnave=new JLabel();
        lnave.setBounds(0,400,62,111);
        //podemos hacer lo mismo del setBounds con //lnave.setSize(62, 111); //lnave.setLocation(0, 500);
        ImageIcon imagen2=new ImageIcon("src/imagenes/nave.png");
        Icon icono2=new ImageIcon(imagen2.getImage().getScaledInstance(lnave.getWidth(), lnave.getHeight(), Image.SCALE_DEFAULT));
        lnave.setIcon(icono2);
        jPanel2.add(lnave);
        
        
        this.repaint();
        
    }
    
    public void pausa(){
        Pausa ventana=new Pausa();
        ventana.setVisible(true);
        ventana.p=this;
        pausa = true;
        tiempo.suspend();
        poten.suspend();
        try {
            disparo.suspend();
        } catch (Exception e) {
        }
        mov.suspend();
    }
    
    public void reanudar(){
        pausa = false;
        tiempo.resume();
        poten.resume();
        try {
            disparo.resume();
        } catch (Exception e) {
        }
        mov.resume();
    }
    
    public void enemigos(){
        
        int posy=50;
        int posx=800;
        for (int i = 0; i < enemigo1.length; i++) {
            for (int j = 0; j < enemigo1[i].length; j++) {
                enemigo1[i][j]=new JLabel();
                n1[i][j]=new Enemigo(2,10);
                enemigo1[i][j].setBounds(posx, posy, 65, 65);
                enemigo1[i][j].setVisible(true);
                
                ImageIcon imagen=new ImageIcon("src/imagenes/enemigo 1.png");
                Icon icono=new ImageIcon(imagen.getImage().getScaledInstance(enemigo1[i][j].getWidth(),enemigo1[i][j].getHeight(), Image.SCALE_DEFAULT));
                enemigo1[i][j].setIcon(icono);
                
                this.jPanel2.add(enemigo1[i][j]);
                posy+=65;
                
            }
            posx+=65;
            posy=50;
        }
        
        
        for (int i = 0; i < enemigo2.length; i++) {
            for (int j = 0; j < enemigo2[i].length; j++) {
                enemigo2[i][j]=new JLabel();
                n2[i][j]=new Enemigo(3,20);
                enemigo2[i][j].setBounds(posx, posy, 65, 65);
                enemigo2[i][j].setVisible(true);
                
                ImageIcon imagen=new ImageIcon("src/imagenes/enemigo 2.png");
                Icon icono=new ImageIcon(imagen.getImage().getScaledInstance(enemigo2[i][j].getWidth(),enemigo2[i][j].getHeight(), Image.SCALE_DEFAULT));
                enemigo2[i][j].setIcon(icono);
                
                this.jPanel2.add(enemigo2[i][j]);
                posy+=65; 
            }
            posx+=65;
            posy=50;
        }
        
        for (int i = 0; i < enemigo3.length; i++) {
            for (int j = 0; j < enemigo3[i].length; j++) {
                enemigo3[i][j]=new JLabel();
                n3[i][j]=new Enemigo(4,30);
                enemigo3[i][j].setBounds(posx, posy, 65, 65);
                enemigo3[i][j].setVisible(true);
                
                ImageIcon imagen=new ImageIcon("src/imagenes/enemigo 3.png");
                Icon icono=new ImageIcon(imagen.getImage().getScaledInstance(enemigo3[i][j].getWidth(),enemigo3[i][j].getHeight(), Image.SCALE_DEFAULT));
                enemigo3[i][j].setIcon(icono);
                
                this.jPanel2.add(enemigo3[i][j]);
                posy+=65; 
            }
            posx+=65;
            posy=50;
        }
        
        
        
    }
    
    public void actualizar(){
        l4.setText(Integer.toString(punteo));

        if (Practica3.configuracion.isModificada()) {
            if (Practica3.configuracion.getVelocidad3() == 1) {
                l8.setText("x1");
            } else {
                l8.setText("x2");
            }
        } else {
            if (mov.vel == 1) {
                l8.setText("x" + mov.vel);
            }
            if (mov.vel == 2) {
                l8.setText("x1.5");
            }
            if (mov.vel == 3) {
                l8.setText("x2");
            }
        }
        
    }

    public void tiempoterminado(){
        Registrojugador r=new Registrojugador();
        r.setVisible(true);
        r.p=this;
        r.motivo="Se te acabo el tiempo eres manco";
        r.titulo();
        pausa = true;
        poten.stop();
        try {
            disparo.stop();
        } catch (Exception e) {
        }
        mov.stop();
        tiempo.stop();
    }
    
    public void naveimpactada(){
        Registrojugador r=new Registrojugador();
        r.setVisible(true);
        r.p=this;
        r.motivo="Nave Impactada";
        r.titulo();
        pausa = true;
        poten.stop();
        try {
            disparo.stop();
        } catch (Exception e) {
        }
        tiempo.stop();
        mov.stop();
        
    }
    
    public void enemigoseliminados(){
        Registrojugador r=new Registrojugador();
        r.setVisible(true);
        r.p=this;
        r.motivo="Exterminaste a los enemigos";
        r.titulo();
        pausa = true;
        poten.stop();
        tiempo.stop();
        mov.stop();
        try {
            disparo.stop();
        } catch (Exception e) {
        }
        
    }

    void verificar() {
        if(enemigos1==0&&enemigos2==0&&enemigos3==0){
            enemigoseliminados();
        }
    }
}


